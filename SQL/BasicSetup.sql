
CREATE TABLE users(
    userId VARCHAR2(20) PRIMARY KEY,
    userName VARCHAR2(100) NOT NULL,
    password VARCHAR2(20) NOT NULL,
    role VARCHAR2(30) NOT NULL
);

CREATE TABLE courses(
    courseId VARCHAR2(20) PRIMARY KEY,
    courseName VARCHAR2(100) NOT NULL,
    description VARCHAR2(300) NOT NULL
);

CREATE TABLE exams(
    examId VARCHAR2(20) PRIMARY KEY,
    examName VARCHAR2(50) NOT NULL, 
    courseId VARCHAR2(20) REFERENCES courses(courseId),
    duration NUMBER NOT NULL,  
    startTime DATE NOT NULL, 
    endTime DATE NOT NULL
);

CREATE TABLE questions(
    questionId VARCHAR2(20) PRIMARY KEY, 
    questionText VARCHAR2(3000) NOT NULL, 
    examId VARCHAR2(20) REFERENCES exams(examId),
    option1 VARCHAR2(200) NOT NULL,   
    option2 VARCHAR2(200) NOT NULL,  
    option3 VARCHAR2(200) NOT NULL,   
    option4 VARCHAR2(200) NOT NULL,  
    correctOption NUMBER NOT NULL
);

CREATE TABLE studentExam(
    studentId VARCHAR2(20) REFERENCES users(userId),
    examId VARCHAR2(20) REFERENCES exams(examId),
    status VARCHAR2(200) NOT NULL,   
    loginTime DATE DEFAULT SYSDATE
);

CREATE TABLE studentAnswer(
    answerId VARCHAR2(20) PRIMARY KEY,
    userId VARCHAR2(20) REFERENCES users(userId),
    examId VARCHAR2(20) REFERENCES exams(examId),
    questionId VARCHAR2(20) REFERENCES questions(questionId),
    chosenOption NUMBER NOT NULL,
    isCorrect VARCHAR2(10) NOT NULL,
    submitTime DATE DEFAULT SYSDATE
);

CREATE TABLE results(
    resultId VARCHAR2(20) PRIMARY KEY,
    userId VARCHAR2(20) REFERENCES users(userId),
    examId VARCHAR2(20) REFERENCES exams(examId),
    score NUMBER NOT NULL,
    percentage NUMBER(4,3) NOT NULL,
    grade VARCHAR2(1) NOT NULL
);

CREATE SEQUENCE userSeq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE courseSeq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE examSeq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE questionSeq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE answerSeq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE resultSeq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE FUNCTION getUserId 
RETURN VARCHAR2 IS
BEGIN
    RETURN 'U' || LPAD(userSeq.NEXTVAL,5,0);
END;
/

CREATE OR REPLACE FUNCTION getCouresId
RETURN VARCHAR2 IS
BEGIN
    RETURN 'C' || LPAD(courseSeq.NEXTVAL,5,0);
END;
/

CREATE OR REPLACE FUNCTION getExamId
RETURN VARCHAR2 IS
BEGIN
    RETURN 'E' || LPAD(examSeq.NEXTVAL,5,0);
END;
/

CREATE OR REPLACE FUNCTION getQuestionId
RETURN VARCHAR2 IS
BEGIN
    RETURN 'Q' || LPAD(questionSeq.NEXTVAL,5,0);
END;
/

CREATE OR REPLACE FUNCTION getAnswerId
RETURN VARCHAR2 IS
BEGIN
    RETURN 'A' || LPAD(answerSeq.NEXTVAL,5,0);
END;
/

CREATE OR REPLACE FUNCTION getResultId
RETURN VARCHAR2 IS
BEGIN
    RETURN 'R' || LPAD(resultSeq.NEXTVAL,5,0);
END;
/

SELECT * FROM users;
SELECT * FROM courses;
SELECT * FROM exams;
SELECT * FROM questions;
SELECT * FROM studentExam;
SELECT * FROM studentAnswer;
SELECT * FROM results;
